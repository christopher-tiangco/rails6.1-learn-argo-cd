name: Add / Update k8s secrets

on:
  workflow_dispatch:

env:
  KUBESEAL_VERSION: 0.19.3
  K8S_NAMESPACE: learn-rails
  TMP_DIR: tmp-files
  APP_SEALED_SECRET_TEMPLATES_DIR: app/manifest/sealed-secret-templates
  SEALED_SECRET_CONTROLLER_CERT: secret_ctrl_pub_cer.pem
  APP_MANIFEST_DIR: app/manifest
  ARGOCD_SYNC_API_URL: https://argocd-k8s.mashmake.com:20081/api/v1/applications/learn-rails-app/sync

jobs:
  update-k8s-secrets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Create directory to store temporary files
      run: |
        mkdir ${{ env.TMP_DIR }}
    
    - name: Install kubeseal
      run: |
        wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v${{ env.KUBESEAL_VERSION }}/kubeseal-${{ env.KUBESEAL_VERSION }}-linux-amd64.tar.gz
        mv kubeseal-${{ env.KUBESEAL_VERSION }}-linux-amd64.tar.gz ${{ env.TMP_DIR }}/kubeseal-${{ env.KUBESEAL_VERSION }}-linux-amd64.tar.gz
        tar -xvzf ${{ env.TMP_DIR }}/kubeseal-${{ env.KUBESEAL_VERSION }}-linux-amd64.tar.gz kubeseal
        mv kubeseal ${{ env.TMP_DIR }}/kubeseal
        install -m 755 ${{ env.TMP_DIR }}/kubeseal /usr/local/bin/kubeseal
        
    - name: Temporarily store sealed secrets controller public certificate to a file
      run: |
        echo '${{ secrets.MASHMAKE_K8S_SECRET_CTRL_PUB_CERT }}' > ${{ env.TMP_DIR }}/${{ env.SEALED_SECRET_CONTROLLER_CERT }}
    
    - name: Store GitHub Secrets to runner environment variables
      run: |
        gh_secret_names=( $(echo '${{ toJSON(secrets) }}' | jq -r 'keys | .[]') ) && for i in "${gh_secret_names[@]}"; do echo $i=$(echo '${{ toJSON(secrets) }}' | jq -r ".$i") >> $GITHUB_ENV; done;
    
    - name: Update k8s SealedSecret manifests
      run: |
        chmod +x sealed_secrets_processor.sh && ./sealed_secrets_processor.sh

    - name: Repo cleanup
      run: |
        rm -rf ${{ env.TMP_DIR }}
      
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply updates to k8s secrets manifests
  
    - name: Trigger ArgoCD API to sync with GitHub
      run: |
        curl --insecure -X POST ${{ env.ARGOCD_SYNC_API_URL }} -H "Authorization: Bearer ${{ secrets.ARGOCD_API_TOKEN }}"